{
	// Place your astraea workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Astraea Command": {
    "prefix": "ArielCommand",
    "body": [
      "import { ArielCommand, ArielCommandOptions } from '#lib/Structures/BaseCommand'",
      "import type { Message } from 'discord.js'",
      "import { ApplyOptions } from '@sapphire/decorators'",
      "import type { Args } from '@sapphire/framework'",
      "",
      "@ApplyOptions<ArielCommandOptions>({",
      "  description: 'Solve this',",
      "  usage: '[optional] <required>'",
      "})",
      "export default class example extends ArielCommand {",
      "  public async run (message: Message, args: Args) {",
      "  }",
      "}",
      ""
    ],
    "description": "Astraea Command"
	  },
	  "AstraeaListener": {
      "prefix": "AstraeaListener",
      "body": [
        "import { Events, Listener, ListenerOptions } from '@sapphire/framework'",
        "import { ApplyOptions } from '@sapphire/decorators'",
        "import type { Message } from 'discord.js'",
        "",
        "@ApplyOptions<ListenerOptions>({",
        "  event: Events.MessageCreate",
        "})",
        "export default class Example extends Listener {",
        "  public run(message: Message): void {",
        "    return null",
        "  }",
        "}",
        ""
      ],
      "description": "AstraeaListener"
    },
	  "ArielRedditCommand": {
		"prefix": "ArielRedditCommand",
		"body": [
		  "import { ApplyOptions } from '@sapphire/decorators'",
		  "import type { PieceContext } from '@sapphire/framework'",
		  "import type { ArielCommandOptions } from '#lib/Structures/BaseCommand'",
		  "import { ArielRedditCommand } from '#lib/Structures/commands/RedditCommand'",
		  "",
		  "@ApplyOptions<ArielCommandOptions>({",
		  "	name: 'solve',",
		  "	aliases: ['other'],",
		  "	description: 'Returns a Image from r/random',",
		  "	nsfw: false",
		  "})",
		  "export default class Example extends ArielRedditCommand {",
		  "	constructor (Context: PieceContext, options: ArielCommandOptions) {",
		  "		super({ subreddit: 'reddit', nsfw: false, colour: 'RANDOM' }, Context, options)",
		  "	}",
		  "}",
		  ""
		],
		"description": "ArielRedditCommand"
	  }
}
