{
  // Place your astraea workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Command": {
    "prefix": "ArielCommand",
    "body": [
      "import { ArielCommand, ArielCommandOptions } from '#lib/Structures/Command'",
      "import { ApplyOptions } from '@sapphire/decorators'",
      "import type { Message } from 'discord.js'",
      "",
      "@ApplyOptions<ArielCommandOptions>({",
      "  description: 'Solve this',",
      "  usage: '[optional] <required>'",
      "})",
      "export default class example extends ArielCommand {",
      "  public async messageRun (message: Message, args: ArielCommand.Args) {",
      "  }",
      "}",
      ""
    ],
    "description": "Command"
  },
  "Listener": {
    "prefix": "ArielListener",
    "body": [
      "import { Events, Listener, ListenerOptions } from '@sapphire/framework'",
      "import { ApplyOptions } from '@sapphire/decorators'",
      "import type { Message } from 'discord.js'",
      "",
      "@ApplyOptions<ListenerOptions>({",
      "  event: Events.MessageCreate",
      "})",
      "export default class Example extends Listener {",
      "  public run(message: Message) {",
      "    return null",
      "  }",
      "}",
      ""
    ],
    "description": "Listener"
  },
  "KSoft Command Template": {
    "prefix": "KSoftCommand",
    "body": [
      "import KSoftCommand from '#lib/Structures/KSoftCommand'",
      "import type { PieceContext } from '@sapphire/framework'",
      "",
      "export default class KSoftCommand extends KSoftCommand {",
      "  constructor(Context: PieceContext) {",
      "    super({ type: '' }, Context)",
      "  }",
      "}",
      ""
    ],
    "description": "KSoft Command Template"
  },
  "Scheduled Task Template": {
    "prefix": "ScheduledTask",
    "body": [
      "import { ApplyOptions } from '@sapphire/decorators'",
      "import { ScheduledTask } from '@sapphire/plugin-scheduled-tasks'",
      "",
      "@ApplyOptions<ScheduledTask.Options>({",
      "  bullJobOptions: {",
      "    removeOnComplete: true",
      "  }",
      "})",
      "export default class Task extends ScheduledTask {",
      "  public run() {",
      "    this.container.logger.debug('Task ran')",
      "  }",
      "}",
      ""
    ],
    "description": "Scheduled Task Template"
  }
}
